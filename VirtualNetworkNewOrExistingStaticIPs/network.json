{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json# ",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmBasename": {
            "type": "string"
        },
        "vmCount": {
            "type": "int"
        },
        "vnetNewOrExisting": {
            "type": "string"
        },
        "vnetName": {
            "type": "string"
        },
        "vnetSubnetName": {
            "type": "string"
        },
        "vnetAddressPrefix": {
            "type": "string",
            "defaultValue": ""
        },
        "vnetSubnetAddressPrefix": {
            "type": "string"
        },
        "vnetStartAddress": {
            "type": "string"
        },
        "vnetRGName": {
            "type": "string"
        },                        
        "location": {
            "type": "string"
        },
        "scriptUri": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/rafaelgodinho/ARMSamples/master/VirtualNetworkNewOrExistingStaticIPs"
        }        
    },
    "variables": {
        "ipOct": "[split(parameters('vnetStartAddress'), '.')]",
        "ipOct01": "[concat(variables('ipOct')[0], '.', variables('ipOct')[1], '.')]",
        "ipOct2": "[int(variables('ipOct')[2])]",
        "ipOct3": "[int(variables('ipOct')[3])]"
    },
    "resources": [
    {
        "name": "[concat(parameters('vmBasename'), '-vnet')]",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "properties": {
            "mode": "Incremental",
            "templateLink": {
            "uri": "[concat(parameters('scriptUri'), '/vnet_', parameters('vnetNewOrExisting'), '.json')]",
            "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "vnetName": {
                    "value": "[parameters('vnetName')]"
                },
                "vnetAddressPrefix": {
                    "value": "[parameters('vnetAddressPrefix')]"
                },
                "vnetSubnetName": {
                    "value": "[parameters('vnetSubnetName')]"
                },
                "vnetSubnetAddressPrefix": {
                    "value": "[parameters('vnetSubnetAddressPrefix')]"
                },
                "location": {
                    "value": "[parameters('location')]"
                }
            }
        }
    },        
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmBasename'), copyIndex(), '-pip')]",
      "location": "[parameters('location')]",
      "properties": {
          "publicIPAllocationMethod": "Dynamic"
      },
      "copy": {
          "name": "publicIPLoop",
          "count": "[parameters('vmCount')]"
      }      
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(parameters('vmBasename'), '-nsg')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh_rule",
            "properties": {
                "description": "Allow SSH",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
            }
          }
        ]
      }
    },    
    {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(parameters('vmBasename'), copyIndex(), '-nic')]",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[concat('Microsoft.Resources/deployments/', parameters('vmBasename'), '-vnet')]",
            "[concat('Microsoft.Network/networkSecurityGroups/', parameters('vmBasename'), '-nsg')]",
            "[concat('Microsoft.Network/publicIPAddresses/', parameters('vmBasename'), copyIndex(), '-pip')]"
        ],
        "properties": {
            "networkSecurityGroup": {  
                "id": "[concat(resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('vmBasename'), '-nsg')))]"
            },            
            "ipConfigurations": [
            {
                "name": "ipconfig1",
                "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[concat(variables('ipOct01'), add(variables('ipOct2'), div(copyIndex(variables('ipOct3')), 256)), '.', mod(copyIndex(variables('ipOct3')), 256))]",                    
                    "subnet": {
                        "id": "[concat(resourceId(parameters('vnetRGName'), 'Microsoft.Network/virtualNetworks', parameters('vnetName')), '/subnets/', parameters('vnetSubnetName'))]"
                    },
                    "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmBasename'), copyIndex(), '-pip'))]"
                    }                    
                }
            }
          ]
        },
        "copy": {
            "name": "nicLoop",
            "count": "[parameters('vmCount')]"
        }         
    }
    ]
}